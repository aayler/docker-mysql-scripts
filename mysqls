#!/usr/bin/env python

import sys
from subprocess import call

def printHelp():
	print ("Usage: mysqls [MYSQL CONTAINER NAME] [MYSQL ROOT PASSWORD] --with-volume")
	print ("")
	print ("Example:")
	print ("mysqls mysql admin123")
	print ("")
	print ("Example:")
	print ("mysqls mysql admin123 --with-volume")
	return

def createVolume(containerVolumeName):
	print ("Creating the container using volumes from strategy. Using container " + containerVolumeName + " as the data-only container")
	call("docker run -v /var/lib/mysql --name "+ containerVolumeName+" busybox true", shell=True)
	return

def runContainer(containerName, rootPassword, hasVolume=False):
	if hasVolume:
		# Create the container name variable
		containerVolumeName = containerName.upper() + '_DATA'

		# Create data container
		createVolume(containerVolumeName)

		call('docker run --volumes-from ' + containerVolumeName + ' --name ' + containerName + ' -e MYSQL_ROOT_PASSWORD="' + rootPassword + '" -d mysql', shell=True)
	else:
		call('docker run --name ' + containerName + ' -e MYSQL_ROOT_PASSWORD="' + rootPassword + '" -d mysql', shell=True)
	return

def main():
	totalArguments = len(sys.argv)
	argumentsList = str(sys.argv)

	if totalArguments == 1:
		printHelp()

	if "--help" in argumentsList:
		printHelp()

	if "-h" in argumentsList:
		printHelp()

	if totalArguments > 1:
		if "--help" not in argumentsList and "-h" not in argumentsList:
			if "--with-volume" in argumentsList:
				runContainer(sys.argv[1], sys.argv[2], hasVolume=True)
			else:
				runContainer(sys.argv[1], sys.argv[2])
	return

main()